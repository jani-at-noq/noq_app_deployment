services:
  backend:
    build:
      context: ./noq_backend_python
    restart: always
    volumes:
      - static-data:/vol/web
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
    depends_on:
      - db

  frontend:
    build:
      context: ./noQ-Frontend
    volumes:
      - static-frontend:/frontend
    command: npm run build -- --mode prod
    depends_on:
      - backend

  db:
    image: postgres:16.3-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

  proxy:
    build:
      context: ./proxy
    restart: always
    depends_on:
      - backend
      - frontend
    ports:
      - 80:8000
    volumes:
      - static-data:/vol/web
      - static-frontend:/frontend

volumes:
  postgres-data:
  static-data:
  static-frontend:

